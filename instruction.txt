1. Подключение по ssh (putty, ssh) (Проверка - можно выполнять команды на сервере)
2. Перекинуть файлы проекта (ftp, git)
- Настроить службу ftp на сервере
sudo apt update
sudo apt install vsftpd
service vsftpd status
- Включаем возможность записи по ftp
Установка nano
sudo apt install nano
- редактируем файл с настройками
 nano /etc/vsftpd.conf
write_enable=YES
Chtl+O - сохранить
Ctrl+X - закрыть

- Подключение по FileZilla
- Включаем доступ под root
nano /etc/ftpusers - коментим root
sudo service vsftpd restart

- Перекидываем файлы
- Даем права 755 (Чтение и выполнение)

3. Создание python окружения для проекта

(Варианыт: 1. использовать старый питон (тогда не все бибилотеки новые работают и f-строки), 
2. установить python3.8, 3. обновить дистрибутив например до 18.04 (3.6python), 4. хостинг с новой системой)
ПОСТАВИТЬ НОВЫЙ python
https://linuxize.com/post/how-to-install-python-3-8-on-ubuntu-18-04/
sudo apt install python3.8-venv


-------------------------------------------------------------
python3 -V - текущая версия

sudo apt install python3-venv
python3 -m venv django2 
source django2/bin/activate

- установка пакетов в окружение
pip freeze > requirements.txt
pip install -r requirements.txt

4. Провека что запускается проекта
python manage.py runsever

5. Настройка базы данных (postgresql)

- Создание базы

sudo apt-get install postgresql postgresql-contrib
sudo -u postgres psql

CREATE DATABASE sitedb;
CREATE USER django with NOSUPERUSER PASSWORD 'nu123456';
GRANT ALL PRIVILEGES ON DATABASE sitedb TO django;

ALTER ROLE django SET CLIENT_ENCODING TO 'UTF8';
ALTER ROLE django SET default_transaction_isolation TO 'READ COMMITTED';
ALTER ROLE django SET TIME ZONE 'Asia/Yekaterinburg';

\q

- ПОдключение
DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # },

    'default': {
        'NAME': 'sitedb',
        'ENGINE': 'django.db.backends.postgresql',
        'USER': 'django',
        'PASSWORD': 'nu123456',
        'HOST': 'localhost'
    }
}

- установка psycopg2
обновим pip
pip install --upgrade pip

Установка дополнительных пакетов
В окружении
sudo apt-get install libpq-dev python3.8-dev
pip install psycopg2
Без окружения
sudo apt-get install libpq-dev python3-dev
pip3 install psycopg2


Проверка:
python manage.py migrate


6. gunicorn (uwsgi)
- установить
pip install gunicorn
- Тестовый запуск проекта
gunicorn blog.wsgi (из папки проекта)
- Регистрация gunicorn как сервиса (сеть, сокет)
sudo nano /etc/systemd/system/gunicorn.service

- текст файла
--------------------------------------
[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/home/ubuntu/blog
ExecStart=/home/ubuntu/blog/django2/bin/gunicorn --access-logfile - --workers 3 --bind unix:/home/ubuntu/blog/blog.sock blog.wsgi

[Install]
WantedBy=multi-user.target
-----------------------------------------

WorkingDirectory - папка с проектом (где лежит manage.py)
/home/ubuntu/blog/django2/bin/gunicorn - путь до гуникорна в окружении



- Регистрация и запуск сервиса
sudo systemctl enable gunicorn
sudo systemctl start gunicorn
sudo systemctl status gunicorn (service gunicorn status) - должен быть active

7. nginx
- установка
sudo apt install nginx
service nginx status
- насройка nginx
cd /etc/nginx/sites-available/
- перенаправление запросов на сокет гуникорна
nano default
текст фала
---------------------------------------------
server {
    listen 80;
    server_name 192.168.0.98;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /home/ubuntu/blog;
    }

    location /media/ {
        root /home/ubuntu/blog;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/home/ubuntu/blog/blog.sock;
    }
}
-------------------------------------------------
service nginx restart

ВОЗМОЖНЫЕ ОШИБКИ, СИТУАЦИИ

Если имзенения внесли в проект
service gunicorn restart
service nginx restart (если нет изменений)

Если 500 ошибка
1. debug = True - посмотреть в чем ошибка
2. прописать почту для уведомления об ошибках https://docs.djangoproject.com/en/3.0/ref/settings/#std:setting-ADMINS
3. https://sentry.io/ - уведомления
4. log nginx